$(function() {
    "use strict";

    jQuery("img.svg").each(function() {
        var $img = jQuery(this);
        var imgID = $img.attr("id");
        var imgClass = $img.attr("class");
        var imgURL = $img.attr("src");

        jQuery.get(
            imgURL,
            function(data) {
                // Get the SVG tag, ignore the rest
                var $svg = jQuery(data).find("svg");

                // Add replaced image's ID to the new SVG
                if (typeof imgID !== "undefined") {
                    $svg = $svg.attr("id", imgID);
                }
                // Add replaced image's classes to the new SVG
                if (typeof imgClass !== "undefined") {
                    $svg = $svg.attr("class", imgClass + " replaced-svg");
                }

                // Remove any invalid XML tags as per http://validator.w3.org
                $svg = $svg.removeAttr("xmlns:a");

                // Check if the viewport is set, else we gonna set it if we can.
                if (
                    !$svg.attr("viewBox") &&
                    $svg.attr("height") &&
                    $svg.attr("width")
                ) {
                    $svg.attr(
                        "viewBox",
                        "0 0 " + $svg.attr("height") + " " + $svg.attr("width")
                    );
                }

                // Replace image with new SVG
                $img.replaceWith($svg);
            },
            "xml"
        );
    });
});

(function($) {
    "use strict";
    // theme settings
    jQuery.fn.vApp = function(arrr) {
        if (arrr.layout) {
            $(this).addClass(arrr.layout);
        }
        if (arrr.skin) {
            $(this).addClass(arrr.skin);
        }
        if (arrr.pattern) {
            $(this).addClass(arrr.pattern);
        }
    };
})(jQuery);

(function($) {
    "use strict";
    // image settings
    $(".media__content").each(function() {
        var thesrc = $(this).attr("src");
        $(this)
            .parent()
            .css("background-image", "url(" + thesrc + ")");
        $(this)
            .parent()
            .css("background-repeat", "no-repeat");
        $(this).hide();
    });

    // pricing
    $(".prcing-table").ready(function() {
        $(".prcing-table")
            .parent()
            .parent()
            .css("align-items", "center");
    });

    // pricing tab
    $(document).on("click", ".pricing-tab-list__item", function() {
        $(".current").removeClass("current");
        $(this).addClass("current");
        var ciclo = $(this).attr(`value`)

        var prices = JSON.parse(localStorage.getItem('prices'))
        calcP1(prices.shared.products.planoP, ciclo);
        calcP2(prices.shared.products.planoM, ciclo);
        calcP3(prices.shared.products.planoTurbo, ciclo);

    });

    $('a').click( function(e){
        e.preventDefault();
        var codigoPlano = $(this).attr("idPlano");
        var cicloDeCobranca = $('.current').attr("value");
        var path = adicionarCodigoPromocional(codigoPlano, cicloDeCobranca, 'PROMOHG40');
        location.href = '#' + path
    });



})(jQuery);

(function($) {
    fetch("https://7ac2b8ab-f3e5-4534-863d-90dd424a6405.mock.pstmn.io/prices")
        .then(r => r.json())
        .then(r => {

            $('#contratarP').attr('idPlano', r.shared.products.planoP.id);
            $('#contratarM').attr('idPlano', r.shared.products.planoM.id);
            $('#contratarTurbo').attr('idPlano', r.shared.products.planoTurbo.id);

            localStorage.setItem('prices', JSON.stringify(r))

            calcP1(r.shared.products.planoP, "triennially");
            calcP2(r.shared.products.planoM, "triennially");
            calcP3(r.shared.products.planoTurbo, "triennially");
        });

})(jQuery);

function adicionarCodigoPromocional(codigoPlano, cicloDeCobranca, codigoPromocional){

    return (`?a=add&pid=${codigoPlano}&billingcycle=${cicloDeCobranca}&promocode=${codigoPromocional}`)
}

function calcP1(plano, ciclo) {
    $("#planoP").text(plano.name);
    exibirAssinaturas(plano.cycle[ciclo], "P");
}
function calcP2(plano, ciclo) {
    $("#planoM").text(plano.name);
    exibirAssinaturas(plano.cycle[ciclo], "M");
}
function calcP3(plano, ciclo) {
    $("#planoTurbo").text(plano.name);
    exibirAssinaturas(plano.cycle[ciclo], "Turbo");
}

function exibirAssinaturas(ciclo, plano) {
    exibirValor("valorTotal" + plano, ciclo.priceOrder);
    exibirDesconto(ciclo, "valorDesconto" + plano);
    exibirEconomia(ciclo, "valorEconomizado" + plano);
    exibirParcelas(ciclo, "valorParcelado" + plano);
}

function calcularDesconto(ciclo) {
    valorNumber = parseFloat(ciclo.priceOrder);
    return (valorNumber * 0.6).toFixed(2);
}

function calcularEconomia(precoOriginal, precoComDesconto) {
    precoOriginal_N = parseFloat(precoOriginal);
    precoComDesconto_N = parseFloat(precoComDesconto);
    return (precoOriginal_N - precoComDesconto_N).toFixed(2);
}

function calcularParcelas(ciclo) {
    return (calcularDesconto(ciclo) / ciclo.months).toFixed(2);
}

function exibirValor(tag, valor) {
    $(tag).text(valor);
}
function exibirDesconto(ciclo, id) {
    var desconto = calcularDesconto(ciclo);
    exibirValor(id, desconto);
}
function exibirEconomia(ciclo, id) {
    var desconto = calcularDesconto(ciclo);
    var valorTotal = ciclo.priceOrder;
    var economia = calcularEconomia(valorTotal, desconto);
    exibirValor(id, economia);
}
function exibirParcelas(ciclo, id) {
    var parcelas = calcularParcelas(ciclo);
    exibirValor(id, parcelas);
}